name: "Deploy #bvtech"

defaults:
  run:
    working-directory: bvtech

on:
  push:
    branches:
      - master
    paths:
      - "bvtech/**"
      - ".github/workflows/bvtech.yml"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: 3.0.0
    - name: Install PostgreSQL
      run: sudo apt-get -yqq install libpq-dev
    - name: Run bundle install
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3
    - name: Setup Database
      env:
        RAILS_ENV: test
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
      run: bin/rails db:create db:schema:load
    - name: Build and test with rspec
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/app_test
      run: bundle exec rspec spec

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Login to Heroku Container registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login
    - name: Build and push
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:push -a bvtech-demo web
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a bvtech-demo web

